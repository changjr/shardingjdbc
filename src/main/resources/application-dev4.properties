spring.shardingsphere.datasource.names=m1,m2
# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true
#配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/db0?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/db1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456

#复杂策略
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}
#数据源控制
spring.shardingsphere.sharding.tables.course.database-strategy.complex.sharding-columns=status
spring.shardingsphere.sharding.tables.course.database-strategy.complex.algorithm-class-name=com.changjr.shardingjdbcdemo.algorithm.complex.ComplexShardingAlgorithm
#表控制
spring.shardingsphere.sharding.tables.course.table-strategy.complex.sharding-columns=user_id
spring.shardingsphere.sharding.tables.course.table-strategy.complex.algorithm-class-name=com.changjr.shardingjdbcdemo.algorithm.complex.Complex_Table_ShardingAlgorithm

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true